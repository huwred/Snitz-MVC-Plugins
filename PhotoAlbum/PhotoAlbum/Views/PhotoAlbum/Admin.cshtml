@using SnitzConfig
@model PhotoAlbum.ViewModels.AdminAlbumViewModel

@{
    ViewBag.Title = "Photo Album Configuration";
    ViewBag.PageTitle = "Photo Album Configuration";
    Layout = "~/Views/Admin/_Layout.cshtml";
}
@section styles
{
    <style>
.forum-header th:nth-child(1){width:20px;}
.forum-header th:nth-child(2){width:160px;}
.forum-header th:nth-child(3){width:40px;}
.forum-header th:nth-child(4){width:40px;}
    </style>
}
@{  
    var grid = new WebGrid(Model.Groups);  
} 
<div class="container-fluid form-horizontal">
<h5>Album plugin Settings</h5>
<hr class="title"/>
    <div class="row-fluid clearfix">
        <div class="form-group">
            @*<label class="control-label col-xs-4">Member albums</label>
            <div class="col-xs-3 col-md-2 col-lg-1">
                <input type="checkbox" data-key="STRPHOTOALBUM" name="MemberAlbums" @if (Model.MemberAlbums){@Html.Raw("checked")}>
            </div>
            <div class="col-xs-6">
                <p class="help-block">Allow member photo albums</p>
            </div>*@
        </div>
    </div>
    <div class="row-fluid clearfix">
        <div class="form-group">
            <label class="control-label col-xs-4">Show consolidated album</label>
            <div class="col-xs-3 col-md-2 col-lg-1">
                <input type="checkbox" data-key="INTCOMMONALBUM" id="public-album" class="linked" name="PublicAlbum" @if (Model.PublicAlbum) { @Html.Raw("checked") }>
            </div>
            <div class="col-xs-6">
                <p class="help-block">Shows a link to <b>ALL</b> uploaded images in one consolidated Album. The label for the album uses the ResourceId 'mnuCommonAlbum'.</p>
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-xs-4">Featured image</label>
            <div class="col-xs-3 col-md-2 col-lg-1">
                <input type="checkbox" data-key="INTFEATUREDPHOTO" class="linked" name="FeaturedPhoto" @if (Model.FeaturedPhoto) { @Html.Raw("checked") } @ViewBag.Disabled>
            </div>
            <div class="col-xs-6">
                <p class="help-block">Display a random image from the albums in the sidebar</p>
                @if (ViewBag.NoImages)
                {
                    <p class="help-block">No images to feature</p>
                }
            </div>
        </div>
        @if (ClassicConfig.GetIntValue("INTPROTECTCONTENT") == 1)
        {
            <div class="form-group">
                <label class="control-label col-xs-4">Protected Folder</label>
                <div class="col-xs-3 col-md-2 col-lg-1">
                    <input type="checkbox" data-key="INTPROTECTPHOTO" class="linked" name="ProtectPhoto" @if (Model.Protected) { @Html.Raw("checked") } @ViewBag.Disabled>
                </div>
                <div class="col-xs-6">
                    <p class="help-block">Store images in the protected Folder if enabled</p>
                </div>
            </div>

        }
        @if (Config.TableExists("FORUM_IMAGE_COMMENT"))
        {
            <div class="form-group">
                <label for="intimgcomment" class="control-label col-xs-4">Allow comments</label>
                <div class="col-xs-2">
                    <input type="checkbox" data-key="INTIMGCOMMENT" @if (ClassicConfig.GetIntValue("INTIMGCOMMENT") == 1) { @Html.Raw("checked") } />
                </div>
            </div>

        }
        <h5>Limits</h5>
        <hr class="title" />
        <div class="row-fluid clearfix">
            @using (Html.BeginForm("SaveLimits", "PhotoAlbum", FormMethod.Post, new { id = "limitsForm" }))
            {
                <div class="form-group">
                    <label for="intmaximagesize" class="control-label col-xs-4">Maximum image size (Mb)</label>
                    <div class="col-xs-2 col-lg-1">
                        <input id="intmaximagesize" class="form-control" name="intmaximagesize" min="1" type="number" value="@ClassicConfig.GetValue("INTMAXIMAGESIZE")" />
                    </div>
                </div>
                <div class="form-group">
                    <label for="intmaximumfiles" class="control-label col-xs-4">Maximum number of files</label>
                    <div class="col-xs-2">
                        <input id="intmaximumfiles" class="form-control" name="intmaximumfiles" min="1" type="number" value="@ClassicConfig.GetIntValue("INTMAXIMUMFILES")" />
                    </div>
                    <div class="col-xs-5">
                        <p class="help-block">Limit for a members album will be the lower of the two options, either @ClassicConfig.GetIntValue("INTMAXIMUMFILES") files or @ClassicConfig.GetIntValue("INTALBUMLIMIT")Mb.<br />0 means no limit</p>
                    </div>
                </div>
                <div class="form-group">
                    <label for="intalbumlimit" class="control-label col-xs-4">Maximum album size (Mb)</label>
                    <div class="col-xs-2">
                        <input id="intalbumlimit" class="form-control" name="intalbumlimit" min="1" type="number" value="@ClassicConfig.GetIntValue("INTALBUMLIMIT")" />
                    </div>
                </div>
                <div class="form-group">
                    <label for="strimagetypes" class="control-label col-xs-4">Allowed image types</label>
                    <div class="col-xs-2">
                        <input id="strimagetypes" type="text" class="form-control" name="strimagetypes" value="@ClassicConfig.GetValue("STRIMAGETYPES")" />
                    </div>
                </div>

                <div class="form-group">
                    <label for="strthumbtype" class="control-label col-xs-4">Thumbnail type</label>
                    <div class="col-xs-2">
                        <select id="strthumbtype" class="form-control" name="strthumbtype">
                            <option value="scaled" @if (ClassicConfig.GetValue("STRTHUMBTYPE") == "scaled") { @Html.Raw("selected") }>Scaled</option>
                            <option value="crop" @if (ClassicConfig.GetValue("STRTHUMBTYPE") != "scaled") { @Html.Raw("selected") }>Cropped</option>
                        </select>
                    </div>
                </div>
                <div class="form-group">
                    <label for="intmaxthumbsize" class="control-label col-xs-4">Max thumbnail size</label>
                    <div class="col-xs-2">
                        <input id="intmaxthumbsize" type="text" class="form-control" name="intmaxthumbsize" value="@ClassicConfig.GetIntValue("INTMAXTHUMBSIZE")" />
                    </div>
                </div>
                <button id="btnSubmit" class="btn btn-sm btn-success pull-right">Save</button>
            }
        </div>
        <div class="row-fluid clearfix">
            <h5>Groups</h5>
            <hr class="title" />
            <div id="gridContent" class="col-xs-8" style=" padding:20px; ">
                @grid.GetHtml(
                    tableStyle: "table table-condensed table-bordered table-striped",
                    headerStyle: "forum-header",
                    footerStyle: "webgrid-footer",
                    alternatingRowStyle: "webgrid-alternating-row",
                    selectedRowStyle: "webgrid-selected-row",
                    rowStyle: "webgrid-row-style",
                    mode: WebGridPagerModes.All,
                    columns:
                        grid.Columns(
                            grid.Column("Id", format: @<text>  <span class="display-mode">@item.Id </span> <label id="lblId" class="edit-mode">@item.Id</label> </text>, style: "col1Width", canSort: false),
                      grid.Column("Description", "Description", format: @<text>  <span class="display-mode"> <label id="lblDescription">@item.Description</label> </span> <input type="text" id="Description" value="@item.Description" class="edit-mode form-control" /></text>, style: "col2Width"),
             grid.Column("Order", "Order", format: @<text> <span class="display-mode"> <label id="lblOrder">@item.Order</label> </span>  <input type="text" id="Order" value="@item.Order" class="edit-mode form-control" /> </text>, style: "col3Width"),
     grid.Column("      ", format: @<text>
        <button class="btn btn-xs btn-primary edit-group display-mode" title="Edit Group description" data-toggle="tooltip"><i class="fa fa-pencil"></i></button>
        <button class="btn btn-xs btn-primary del-group display-mode" title="Delete Group" data-toggle="tooltip"><i class="fa fa-trash"></i></button>
        <button class="btn btn-xs btn-success save-group edit-mode" title="Save changes" data-toggle="tooltip"><i class="fa fa-save"></i></button>
        <button class="btn btn-xs btn-warning cancel-group edit-mode" title="Cancel" data-toggle="tooltip"><i class="fa fa-times"></i></button>
    </text>, style: "col4Width", canSort: false)
))


            </div>
            <p>&nbsp;</p>
            <p class="help-block">The description will be used as part of the resource key to lookup the display string. i.e. Group_Description (with spaces stripped)</p>
            <p><button id="add" class="btn btn-xs btn-success">Add Group</button></p>
        </div>
        <div class="row-fluid clearfix"></div>
    </div>
</div>
@section scripts
{
<script type="text/javascript" >  
    $(function () {  
        $.fn.bootstrapSwitch.defaults.size = 'mini';
        $.fn.bootstrapSwitch.defaults.onColor = 'success';
        $.fn.bootstrapSwitch.defaults.offColor = 'warning';

        $("[type='checkbox']").bootstrapSwitch();
        $("[type='checkbox']").on('switchChange.bootstrapSwitch', function (event, state) {
            var key = $(this).data("key");
            if ((key === "INTCOMMONALBUM" || key === "INTFEATUREDPHOTO") && state === true) {
                //check if albums are allow
                if ($('[name=MemberAlbums').bootstrapSwitch('state') === false) {
                    $(this).bootstrapSwitch('state', false);
                    BootstrapDialog.show({
                        type: BootstrapDialog.TYPE_WARNING,
                        title: 'Error: ',
                        message: 'Need to enable albums first',
                        size: BootstrapDialog.SIZE_SMALL
                    });
                    return false;
                }
            }
            $.ajax({
                url: SnitzVars.baseUrl + 'PhotoAlbum/SaveConfigBool',
                type: 'POST',
                data: { 'id': key, 'value': JSON.stringify(state) },
                cache: false,
                error: function (jqXHR, exception) {
                    BootstrapDialog.show({
                        type: BootstrapDialog.TYPE_WARNING,
                        title: 'Error: ' + jqXHR.status,
                        message: exception,
                        size: BootstrapDialog.SIZE_SMALL
                    });
                }
            });
            
            if (key === "STRPHOTOALBUM" && state === false) {
                $('.linked').bootstrapSwitch('state', false);
            }
        });
        $('.edit-mode').hide();  
        $('.edit-group, .cancel-group').on('click', function () {
            var tr = $(this).parents('tr:first');  
            tr.find('.edit-mode, .display-mode').toggle();  
        });  
        $('#add').on('click', function () {
            $('table tbody').append('<tr id=\'new-row\'>' +
                    '<td><label id="lblId">0</label></td>' +
                    '<td class="col2Width"><input class="form-control" name=\'Description\' id=\'Description\' /></td>' +
                    '<td class="col3Width"><input class="form-control" name=\'Order\' id=\'Order\' /></td>' +
                    '<td class="col4Width"><button class="btn btn-xs btn-success save-group"><i class="fa fa-save"></i></button> <button id=\'removeRow\' class="btn btn-xs btn-warning"><i class="fa fa-times"></i></button></td></tr>');

            $('#add').hide();
        });
        $(document).on('click', '#removeRow', function() {
            $('#new-row').remove();
            $('#add').show();
        });
        $(document).on('click', '.save-group', function () {
            
            var tr = $(this).parents('tr:first');  
            var description = tr.find("#Description").val();
            var order = tr.find("#Order").val();
            var groupId = tr.find("#lblId").html();
            tr.find("#lblDescription").text(description);
            tr.find("#lblOrder").text(order);
            tr.find('.edit-mode, .display-mode').toggle();  
            var albumGroup =  
            {  
                "Id": groupId,
                "Description": description,
                "Order": order
            };
            
            $.ajax({  
                url: SnitzVars.baseUrl + 'PhotoAlbum/SaveGroup',
                type: 'POST',
                data: JSON.stringify(albumGroup),
                dataType: 'json',  
                contentType: 'application/json; charset=utf-8',
                error: function (jqXHR, exception) {
                    BootstrapDialog.show({
                        type: BootstrapDialog.TYPE_WARNING,
                        title: 'Error: ' + jqXHR.status,
                        message: exception,
                        size: BootstrapDialog.SIZE_SMALL
                    });
                },
                success: function (data) {  
                    BootstrapDialog.show({
                        title: 'Save group ',
                        message: data,
                        size: BootstrapDialog.SIZE_SMALL
                    });
                    location.reload();
                }  
            });  
   
        });  
        $(document).on('click', '.del-group', function () {
            var tr = $(this).parents('tr:first');
            var description = tr.find("#Description").val();
            var order = tr.find("#Order").val();
            var groupId = tr.find("#lblId").html();
            tr.find("#lblDescription").text(description);
            tr.find("#lblOrder").text(order);
            tr.find('.edit-mode, .display-mode').toggle();
            var albumGroup =
            {
                "Id": groupId,
                "Description": description,
                "Order": order
            };
            $.ajax({
                url: SnitzVars.baseUrl + 'PhotoAlbum/DeleteGroup',
                type: 'POST',
                data: JSON.stringify(albumGroup),
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                error: function (jqXHR, exception) {
                    BootstrapDialog.show({
                        type: BootstrapDialog.TYPE_WARNING,
                        title: 'Error: ' + jqXHR.status,
                        message: exception,
                        size: BootstrapDialog.SIZE_SMALL
                    });
                },
                success: function (data) {

                    BootstrapDialog.success(data,function() {
                            location.reload();
                        });

                }
            });

        });

        $('#limitsForm').on('click', '#btnSubmit', function (event) {
            event.preventDefault();

            $.ajax({
                url: SnitzVars.baseUrl + "PhotoAlbum/SaveLimits",
                type: "POST",
                dataType: "json",
                data: $('#limitsForm').serialize(),
                error: function (xhr, textStatus, exceptionThrown) {
                    debugger;
                    BootstrapDialog.show({
                        type: BootstrapDialog.TYPE_WARNING,
                        title: 'Error: ' + xhr.status,
                        message: exceptionThrown,
                        size: BootstrapDialog.SIZE_SMALL
                    });
                },
                success: function (data) {

                    BootstrapDialog.success(data, function () {
                        location.reload();
                    });

                }
            });

            return false;
        });
    })
</script> 
    
}
