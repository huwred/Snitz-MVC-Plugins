#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ASP
{
    using System;
    using System.Collections.Generic;
    
    #line 1 "..\..\Views\Calendar\Index.cshtml"
    using System.Globalization;
    
    #line default
    #line hidden
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    
    #line 2 "..\..\Views\Calendar\Index.cshtml"
    using System.Web.Optimization;
    
    #line default
    #line hidden
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    
    #line 3 "..\..\Views\Calendar\Index.cshtml"
    using LangResources.Utility;
    
    #line default
    #line hidden
    
    #line 4 "..\..\Views\Calendar\Index.cshtml"
    using SnitzConfig;
    
    #line default
    #line hidden
    
    #line 5 "..\..\Views\Calendar\Index.cshtml"
    using SnitzCore.Utility;
    
    #line default
    #line hidden
    
    #line 6 "..\..\Views\Calendar\Index.cshtml"
    using SnitzEvents.Models;
    
    #line default
    #line hidden
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/Calendar/Index.cshtml")]
    public partial class _Views_Calendar_Index_cshtml : System.Web.Mvc.WebViewPage<dynamic>
    {
        public _Views_Calendar_Index_cshtml()
        {
        }
        public override void Execute()
        {
            
            #line 9 "..\..\Views\Calendar\Index.cshtml"
  
    ViewBag.Title = Config.ForumTitle + " | " + ResourceManager.GetLocalisedString("calTitle", "Events");
    CultureInfo ci = SessionData.Get<CultureInfo>("Culture");
    string clang = ci.TwoLetterISOLanguageName;
    string[] rtlLangs = new string[] { "ar", "arc", "dv", "fa", "ha", "khw", "ks", "ku", "ps", "ur", "yi", "he" };
    string[] arabic = new string[] { "ar", "arc", "dv", "fa", "ha", "khw", "ks", "ku", "ps", "ur" }; //Cairo
    string[] aramaic = new string[] { "yi", "he" }; //Tinos

    bool isRighToLeft = (rtlLangs.Contains(clang));

    if (!SessionData.Contains("isRighToLeft") || isRighToLeft != SessionData.Get<bool>("isRighToLeft"))
    {
        SessionData.Set("isRighToLeft", isRighToLeft);
    }

            
            #line default
            #line hidden
WriteLiteral("\r\n");

DefineSection("styles", () => {

WriteLiteral("\r\n");

WriteLiteral("    ");

            
            #line 25 "..\..\Views\Calendar\Index.cshtml"
Write(Styles.Render("~/Content/plugincss/fullcalendar.min.css"));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("    ");

            
            #line 26 "..\..\Views\Calendar\Index.cshtml"
Write(Styles.Render("~/Content/jquery-ui-timepicker-addon.min.css"));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("    ");

            
            #line 27 "..\..\Views\Calendar\Index.cshtml"
Write(Html.Raw(Config.ThemeCss("plugincss/fullcalendar.min.css")));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 28 "..\..\Views\Calendar\Index.cshtml"
    
            
            #line default
            #line hidden
            
            #line 28 "..\..\Views\Calendar\Index.cshtml"
     if (isRighToLeft)
    {
        
            
            #line default
            #line hidden
            
            #line 30 "..\..\Views\Calendar\Index.cshtml"
   Write(Styles.Render("~/Content/plugincss/fullcalendar-rtl.css"));

            
            #line default
            #line hidden
            
            #line 30 "..\..\Views\Calendar\Index.cshtml"
                                                                  
    }

            
            #line default
            #line hidden
});

DefineSection("sidebox", () => {

WriteLiteral("\r\n\r\n\r\n");

            
            #line 36 "..\..\Views\Calendar\Index.cshtml"
    
            
            #line default
            #line hidden
            
            #line 36 "..\..\Views\Calendar\Index.cshtml"
     if (ClassicConfig.GetIntValue("INTCALPUBLICHOLIDAYS") == 1)
    {

            
            #line default
            #line hidden
WriteLiteral("        <div");

WriteLiteral(" class=\"side-box\"");

WriteLiteral(">\r\n");

WriteLiteral("            ");

            
            #line 39 "..\..\Views\Calendar\Index.cshtml"
       Write(ResourceManager.GetLocalisedString("calHolidaysFor", "Events"));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("            ");

            
            #line 40 "..\..\Views\Calendar\Index.cshtml"
       Write(Html.DropDownList("calCountry", new SelectList(ViewData["Countries"] as List<EnricoCountry>, "CountryCode", "Name", ClassicConfig.GetValue("STRCALCOUNTRY")), new { @class = "form-control", id = "change-holidays" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n            <select");

WriteLiteral(" class=\"form-control\"");

WriteLiteral(" name=\"Region\"");

WriteLiteral(" id=\"countryRegion\"");

WriteLiteral(" style=\"display:none;\"");

WriteLiteral("><option");

WriteLiteral(" value=\'\'");

WriteLiteral(">No Regions</option></select>\r\n            <span");

WriteLiteral(" class=\"small\"");

WriteLiteral(">");

            
            #line 42 "..\..\Views\Calendar\Index.cshtml"
                           Write(ResourceManager.GetLocalisedString("calPublicData", "Events"));

            
            #line default
            #line hidden
WriteLiteral(" <a");

WriteLiteral(" href=\"http://kayaposoft.com/enrico/\"");

WriteLiteral(" title=\"Enrico Service is a free service written in PHP providing public holidays" +
" for several countries\"");

WriteLiteral(" data-toggle=\"tooltip\"");

WriteLiteral(">Enrico</a></span>\r\n        </div>\r\n");

            
            #line 44 "..\..\Views\Calendar\Index.cshtml"
    }

            
            #line default
            #line hidden
WriteLiteral("    ");

            
            #line 45 "..\..\Views\Calendar\Index.cshtml"
Write(Html.Partial("_RightColumn", new ViewDataDictionary(this.ViewData) { { "show", new List<string>() { "catlist", "photo", "poll" } } }));

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n");

});

WriteLiteral("<div");

WriteLiteral(" class=\"chunk-main\"");

WriteLiteral(">\r\n    <h5>");

            
            #line 49 "..\..\Views\Calendar\Index.cshtml"
   Write(ResourceManager.GetLocalisedString("calTitle", "Events"));

            
            #line default
            #line hidden
WriteLiteral("</h5>\r\n    <hr");

WriteLiteral(" class=\"title\"");

WriteLiteral(" />\r\n    <div");

WriteLiteral(" class=\"row-fluid\"");

WriteLiteral(">\r\n        <div");

WriteLiteral(" id=\"calendar\"");

WriteLiteral("></div>\r\n    </div>\r\n    <div");

WriteLiteral(" class=\"row-fluid\"");

WriteLiteral("></div>\r\n</div>\r\n");

DefineSection("scripts", () => {

WriteLiteral("\r\n    <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(">\r\n        var upComingEventsTitle = \'[");

            
            #line 58 "..\..\Views\Calendar\Index.cshtml"
                               Write(ResourceManager.GetLocalisedString("upComingEventTitle", "Events"));

            
            #line default
            #line hidden
WriteLiteral("]\';\r\n        var pastEventsTitle = \'[");

            
            #line 59 "..\..\Views\Calendar\Index.cshtml"
                           Write(ResourceManager.GetLocalisedString("upPastEventsTitle", "Events"));

            
            #line default
            #line hidden
WriteLiteral("]\';\r\n\r\n    </script>\r\n");

WriteLiteral("    ");

            
            #line 62 "..\..\Views\Calendar\Index.cshtml"
Write(Scripts.Render("~/Scripts/moment.min.js"));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 63 "..\..\Views\Calendar\Index.cshtml"
    
            
            #line default
            #line hidden
            
            #line 63 "..\..\Views\Calendar\Index.cshtml"
     if (clang == "fa")
    {
        
            
            #line default
            #line hidden
            
            #line 65 "..\..\Views\Calendar\Index.cshtml"
   Write(Scripts.Render("~/Scripts/moment-jalaali.min.js"));

            
            #line default
            #line hidden
            
            #line 65 "..\..\Views\Calendar\Index.cshtml"
                                                          
    }
    
            
            #line default
            #line hidden
            
            #line 67 "..\..\Views\Calendar\Index.cshtml"
                                                                  

            
            #line default
            #line hidden
WriteLiteral("    ");

            
            #line 68 "..\..\Views\Calendar\Index.cshtml"
Write(Scripts.Render("~/Scripts/pluginjs/fullcalendar-year.min.js"));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("    ");

            
            #line 69 "..\..\Views\Calendar\Index.cshtml"
Write(Scripts.Render("~/Scripts/lang/" + clang + ".js"));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("    ");

            
            #line 70 "..\..\Views\Calendar\Index.cshtml"
Write(Scripts.Render("~/Scripts/pluginjs/snitz.cal.min.js"));

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n    <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(">\r\n        $(document)\r\n            .ready(function () {\r\n\r\n                $(\'#c" +
"ountryRegion\').change(function () {\r\n                    var val = $(\'#change-ho" +
"lidays\').val() + \'|\' + $(this).val();\r\n                    FullCalendar(\"");

            
            #line 78 "..\..\Views\Calendar\Index.cshtml"
                             Write(Url.Action("GetCalendarEvents"));

            
            #line default
            #line hidden
WriteLiteral("\", \'calendar\',\'");

            
            #line 78 "..\..\Views\Calendar\Index.cshtml"
                                                                            Write(ClassicConfig.GetValue("INTFIRSTDAYOFWEEK"));

            
            #line default
            #line hidden
WriteLiteral(@"','?country=' + val);
                });

                $('#change-holidays')
                    .change(function() {
                        var val = $(this).val();
                        populateRegions(val);
                        FullCalendar(""");

            
            #line 85 "..\..\Views\Calendar\Index.cshtml"
                                 Write(Url.Action("GetCalendarEvents"));

            
            #line default
            #line hidden
WriteLiteral("\", \'calendar\',\'");

            
            #line 85 "..\..\Views\Calendar\Index.cshtml"
                                                                                Write(ClassicConfig.GetValue("INTFIRSTDAYOFWEEK"));

            
            #line default
            #line hidden
WriteLiteral("\',\'?country=\' + val);\r\n\r\n                    });\r\n\r\n                FullCalendar(" +
"\"");

            
            #line 89 "..\..\Views\Calendar\Index.cshtml"
                         Write(Url.Action("GetCalendarEvents"));

            
            #line default
            #line hidden
WriteLiteral("\", \'calendar\',\'");

            
            #line 89 "..\..\Views\Calendar\Index.cshtml"
                                                                        Write(ClassicConfig.GetValue("INTFIRSTDAYOFWEEK"));

            
            #line default
            #line hidden
WriteLiteral("\',\'\');\r\n                populateRegions($(\'#change-holidays\').val());\r\n          " +
"  });\r\n        function populateRegions(country) {\r\n                        var " +
"subItems=\"\";\r\n                        $.getJSON(\"");

            
            #line 94 "..\..\Views\Calendar\Index.cshtml"
                              Write(Url.Action("GetRegions","Calendar"));

            
            #line default
            #line hidden
WriteLiteral("\", { id: country }, function (data) {\r\n\r\n                            $.each(data," +
" function (index, item) {\r\n                                if (item === \'");

            
            #line 97 "..\..\Views\Calendar\Index.cshtml"
                                         Write(ClassicConfig.GetValue("STRCALREGION"));

            
            #line default
            #line hidden
WriteLiteral(@"') {
                                    subItems += ""<option value='"" + item + ""' selected>"" + item + ""</option>"";
                                } else {
                                    subItems += ""<option value='"" + item + ""'>"" + item + ""</option>"";
                                }
                            });
                            if (subItems.length > 1) {
                                subItems = ""<option value=''>Select Region</option>"" + subItems;
                                $(""#countryRegion"").html(subItems);
                                $(""#countryRegion"").show();
                            } else {
                                subItems = ""<option value='' selected>No Regions</option>"";
                                $(""#countryRegion"").html(subItems);
                                $(""#countryRegion"").hide();
                            }

                        });
        }
    </script>
");

});

        }
    }
}
#pragma warning restore 1591
